.wrapper
  .sidebar
    .geocoder
      input#address type="textbox" placeholder="福岡県飯塚市"
      input#submit type="button" value="検索"
    h1 サンプル
    h1 福岡県福岡市博多区
    p
      tt
        |  人口&nbsp&nbsp&nbsp&nbsp
      tt
        |  232,795人
    p
      tt
        |  男女比&nbsp&nbsp&nbsp
      tt
        |  5:5
    p
      tt
        |  年齢比
    p
      tt
        |  &nbsp&nbsp10代以下&nbsp&nbsp&nbsp
      tt
        |  11%
    p
      tt
        |  &nbsp&nbsp20代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  12%
    p
      tt
        |  &nbsp&nbsp30代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  15%
    p
      tt
        |  &nbsp&nbsp40代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  17%
    p
      tt
        |  &nbsp&nbsp50代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  20%
    p
      tt
        |  &nbsp&nbsp60代以上&nbsp&nbsp&nbsp
      tt
        |  25%
    input style="margin-left: 20px; margin-bottom: 10px; width: 150px;" placeholder='キーワードで絞り込む'
    ul style='list-style: none; color: white; padding: 0; margin-left: 15px; margin-top: 0px;'
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 飲食関係(30)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" ファッション(21)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" エンタメ(18)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 公共施設(12)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 交通関係(8)

  input id='token' type='hidden' value='#{form_authenticity_token}'
  .mapview
    #map style="width: 100%; height: 100%;"
      - if user_signed_in?
        javascript:
          last_LATITUDE = #{if @last then @last["latitude"] else 0};
          last_LONGITUDE =  #{if @last then @last["longitude"] else 0};
 
          console.log("hoge"); 
          var tokenDOM = document.getElementById("token");
          token = tokenDOM.value;
          var geocoder = new google.maps.Geocoder();
            
          handler = Gmaps.build('Google');
          handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
            markers = handler.addMarkers(#{raw @hash.to_json});
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
            if (last_LATITUDE == 0 && last_LONGITUDE == 0){
              handler.getMap().setCenter(new google.maps.LatLng(36.204824, 138.252924)); 
              handler.getMap().setZoom(5);
            }
            else{
              handler.getMap().setCenter(new google.maps.LatLng(last_LATITUDE, last_LONGITUDE)); 
              handler.getMap().setZoom(16);
            }
          });

          handler.callback = function(){
            google.maps.event.addListener(handler.map.serviceObject, "click", function(e){
              var form = '<form class="new_want" id="new_want" action="/wants" method="post" accept-charset="UTF-8"><input name="utf8" type="hidden" value="✓"><input name="authenticity_token" type="hidden" value="'+token+'"><div><label for="want_user_id"></label><input name="want[user_id]" id="want_user_id" type="hidden" value="'+#{if current_user then current_user.id}+'"></div><div class="field"><label for="want_title">Title</label><input name="want[title]" id="want_title" type="text">が欲しい</div><div class="field"><label for="want_category_id">Category name</label><select name="want[category_id]" id="want_categories_id"/>i<option value="1">飲食関係</option><option value="2">ファッション</option><option value="3">エンタメ</option><option value="4">公共施設</option><option value="5">交通関係</option></select></div><div class="field"><label for="want_comment">Comment</label><textarea name="want[comment]" id="want_comment"></textarea></div><div class="field"><label for="want_latitude"></label><input name="want[latitude]" id="want_latitude" type="hidden" value="'+e.latLng.lat()+'"></div><div class="field"><label for="want_longitude"></label><input name="want[longitude]" id="want_longitude" type="hidden" value="'+e.latLng.lng()+'"></div><div class="actions"><input name="commit" type="submit" value="Create Want" data-disable-with="Create Want"></div></form>';
              markers = handler.addMarkers([
                {
                  "lat": e.latLng.lat(),
                  "lng": e.latLng.lng(),
                  "infowindow": form,
                }
              ]);
            });
            
            document.getElementById('submit').addEventListener('click', function() {
              geocodeAddress(geocoder, handler);
            });

            function geocodeAddress(geocoder, resultMap) {
              var address = document.getElementById('address').value;
              geocoder.geocode({'address': address}, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                  resultMap.getMap().setCenter(results[0].geometry.location);
                  resultMap.getMap().setZoom(17);
                } else {
                  alert('Geocode was not successful for the following reason: ' + status);
                }
              });
            }
          }();

      - else
        javascript:
          var tokenDOM = document.getElementById("token");
          token = tokenDOM.value;
          var geocoder = new google.maps.Geocoder();

          handler = Gmaps.build('Google');
          handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
            markers = handler.addMarkers(#{raw @hash.to_json});
            handler.getMap().setCenter(new google.maps.LatLng(36.204824, 138.252924));
            handler.getMap().setZoom(5);
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
          });

          handler.callback = function(){
            google.maps.event.addListener(handler.map.serviceObject, "click", function(e){
              var form = 'ピンを建てるには'+'<a href="/users/sign_in">ログイン</a>'+'か'+'<a href="/users/sign_up">新規登録</a>'+'を行ってください'
              markers = handler.addMarkers([
                {
                  "lat": e.latLng.lat(),
                  "lng": e.latLng.lng(),
                  "infowindow": form,
                }
              ]);
            });

            document.getElementById('submit').addEventListener('click', function() {
              geocodeAddress(geocoder, handler);
            });

            function geocodeAddress(geocoder, resultMap) {
              var address = document.getElementById('address').value;
              geocoder.geocode({'address': address}, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                  resultMap.getMap().setCenter(results[0].geometry.location);
                  resultMap.getMap().setZoom(17);
                } else {
                  alert('Geocode was not successful for the following reason: ' + status);
                }
              });
            }
          }();

