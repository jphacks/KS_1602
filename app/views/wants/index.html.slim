.wrapper
  .sidebar
    h1 福岡県福岡市博多区

    p
      tt
        |  人口&nbsp&nbsp&nbsp&nbsp
      tt
        |  232,795人
    p
      tt
        |  男女比&nbsp&nbsp&nbsp
      tt
        |  5:5
    p
      tt
        |  年齢比
    p
      tt
        |  &nbsp&nbsp10代以下&nbsp&nbsp&nbsp
      tt
        |  11%
    p
      tt
        |  &nbsp&nbsp20代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  12%
    p
      tt
        |  &nbsp&nbsp30代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  15%
    p
      tt
        |  &nbsp&nbsp40代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  17%
    p
      tt
        |  &nbsp&nbsp50代&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
      tt
        |  20%
    p
      tt
        |  &nbsp&nbsp60代以上&nbsp&nbsp&nbsp
      tt
        |  25%
    input style="margin-left: 20px; margin-bottom: 10px; width: 150px;" placeholder='キーワードで絞り込む'
    ul style='list-style: none; color: white; padding: 0; margin-left: 15px; margin-top: 0px;'
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 飲食関係(30)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" ファッション(21)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" エンタメ(18)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 公共施設(12)
      li style="margin-top: 10px;"
        input type='checkbox' style="margin-right: 10px;" 交通関係(8)

  input id='token' type='hidden' value='#{form_authenticity_token}'
  .mapview
    #map style="width: 100%; height: 100%;"
      - if user_signed_in?
        javascript:
          var tokenDOM = document.getElementById("token");
          token = tokenDOM.value;
          var geocoder = new google.maps.Geocoder();
            
          handler = Gmaps.build('Google');
          handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
            markers = handler.addMarkers(#{raw @hash.to_json});
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
            handler.getMap().setCenter(new google.maps.LatLng(36.204824, 138.252924)); 
            handler.getMap().setZoom(5);
          });

          handler.callback = function(){
            google.maps.event.addListener(handler.map.serviceObject, "click", function(e){
              var form = '<form class="new_wants" id="new_wants" action="/wants" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="'+token+'" /><div class="field"><input type="hidden" name="wants[USER_ID]" value="'+#{if current_user then current_user.id}+'"  id="wants_USER_ID" /></div><div class="field"><label for="wants_TITLE">Title</label><input type="text" name="wants[TITLE]" id="wants_TITLE" /></div><div class="field"><label for="wants_CATEGORY_ID">Category id</label><input type="number" name="wants[CATEGORY_ID]" id="wants_CATEGORY_ID" /></div><div class="field"><label for="wants_COMMENT">Comment</label><textarea name="wants[COMMENT]" id="wants_COMMENT"></textarea></div><div class="field"><input type="hidden" name="wants[LATITUDE]" value="'+e.latLng.lat()+'"  id="wants_LATITUDE" /></div><div class="field"><input type="hidden" name="wants[LONGITUDE]" value="'+e.latLng.lng()+'"  id="wants_LONGITUDE" /></div><div class="actions"><input type="submit" name="commit" value="Create Wants" data-disable-with="Create Wants" /></div></form>';
              markers = handler.addMarkers([
                {
                  "lat": e.latLng.lat(),
                  "lng": e.latLng.lng(),
                  "infowindow": form,
                }
              ]);
            });
            
            document.getElementById('submit').addEventListener('click', function() {
              geocodeAddress(geocoder, handler);
            });

            function geocodeAddress(geocoder, resultMap) {
              var address = document.getElementById('address').value;
              geocoder.geocode({'address': address}, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                  resultMap.getMap().setCenter(results[0].geometry.location);
                  resultMap.getMap().setZoom(17);
                } else {
                  alert('Geocode was not successful for the following reason: ' + status);
                }
              });
            }
          }();

      - else
        javascript:
          var tokenDOM = document.getElementById("token");
          token = tokenDOM.value;
          var geocoder = new google.maps.Geocoder();

          handler = Gmaps.build('Google');
          handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
            markers = handler.addMarkers(#{raw @hash.to_json});
            handler.getMap().setCenter(new google.maps.LatLng(36.204824, 138.252924));
            handler.getMap().setZoom(5);
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
          });

          handler.callback = function(){
            google.maps.event.addListener(handler.map.serviceObject, "click", function(e){
              var form = 'ピンを建てるには'+'<a href="/users/sign_in">ログイン</a>'+'か'+'<a href="/users/sign_up">新規登録</a>'+'を行ってください'
              markers = handler.addMarkers([
                {
                  "lat": e.latLng.lat(),
                  "lng": e.latLng.lng(),
                  "infowindow": form,
                }
              ]);
            });

            document.getElementById('submit').addEventListener('click', function() {
              geocodeAddress(geocoder, handler);
            });

            function geocodeAddress(geocoder, resultMap) {
              var address = document.getElementById('address').value;
              geocoder.geocode({'address': address}, function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                  resultMap.getMap().setCenter(results[0].geometry.location);
                  resultMap.getMap().setZoom(17);
                } else {
                  alert('Geocode was not successful for the following reason: ' + status);
                }
              });
            }
          }();

